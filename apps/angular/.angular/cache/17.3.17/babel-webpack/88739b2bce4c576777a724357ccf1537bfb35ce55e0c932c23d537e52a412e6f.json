{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ForecastItemComponent } from './forecast-item.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ForecastComponent_section_0_app_forecast_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-forecast-item\", 6);\n    i0.ɵɵlistener(\"toggle\", function ForecastComponent_section_0_app_forecast_item_5_Template_app_forecast_item_toggle_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onToggleForecast($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"daily\", ctx_r1.weatherData.daily)(\"index\", i_r3)(\"isActive\", ctx_r1.activeForecastIndex === i_r3);\n  }\n}\nfunction ForecastComponent_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 1)(1, \"h2\", 2);\n    i0.ɵɵtext(2, \"7-Day Forecast\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4);\n    i0.ɵɵtemplate(5, ForecastComponent_section_0_app_forecast_item_5_Template, 1, 3, \"app-forecast-item\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.weatherData.daily.time);\n  }\n}\nexport class ForecastComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.weatherData = null;\n    this.activeForecastIndex = null;\n  }\n  ngAfterViewInit() {\n    // Component is ready\n  }\n  onToggleForecast(index) {\n    if (this.activeForecastIndex === index) {\n      this.activeForecastIndex = null;\n    } else {\n      this.activeForecastIndex = index;\n      // Smooth scroll to the expanded item\n      setTimeout(() => {\n        const activeElement = this.elementRef.nativeElement.querySelector('.forecast-item.active');\n        if (activeElement) {\n          activeElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest'\n          });\n        }\n      }, 100);\n    }\n  }\n  static {\n    this.ɵfac = function ForecastComponent_Factory(t) {\n      return new (t || ForecastComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForecastComponent,\n      selectors: [[\"app-forecast\"]],\n      inputs: {\n        weatherData: \"weatherData\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"forecast-section\", 4, \"ngIf\"], [1, \"forecast-section\"], [1, \"section-title\"], [1, \"forecast\"], [\"data-testid\", \"forecast-list\", 1, \"forecast__list\"], [3, \"daily\", \"index\", \"isActive\", \"toggle\", 4, \"ngFor\", \"ngForOf\"], [3, \"toggle\", \"daily\", \"index\", \"isActive\"]],\n      template: function ForecastComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, ForecastComponent_section_0_Template, 6, 1, \"section\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf, ForecastItemComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ForecastItemComponent","i0","ɵɵelementStart","ɵɵlistener","ForecastComponent_section_0_app_forecast_item_5_Template_app_forecast_item_toggle_0_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onToggleForecast","ɵɵelementEnd","ɵɵproperty","weatherData","daily","i_r3","activeForecastIndex","ɵɵtext","ɵɵtemplate","ForecastComponent_section_0_app_forecast_item_5_Template","ɵɵadvance","time","ForecastComponent","constructor","elementRef","ngAfterViewInit","index","setTimeout","activeElement","nativeElement","querySelector","scrollIntoView","behavior","block","ɵɵdirectiveInject","ElementRef","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ForecastComponent_Template","rf","ctx","ForecastComponent_section_0_Template","i1","NgForOf","NgIf","encapsulation"],"sources":["/home/alicia/Documents/code/weather-front/apps/angular/src/app/components/forecast.component.ts"],"sourcesContent":["import { Component, Input, AfterViewInit, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WeatherData } from '../types/weather.types';\nimport { ForecastItemComponent } from './forecast-item.component';\n\n@Component({\n  selector: 'app-forecast',\n  standalone: true,\n  imports: [CommonModule, ForecastItemComponent],\n  template: `\n    <section class=\"forecast-section\" *ngIf=\"weatherData\">\n      <h2 class=\"section-title\">7-Day Forecast</h2>\n      <div class=\"forecast\">\n        <div class=\"forecast__list\" data-testid=\"forecast-list\">\n          <app-forecast-item\n            *ngFor=\"let date of weatherData.daily.time; let i = index\"\n            [daily]=\"weatherData.daily\"\n            [index]=\"i\"\n            [isActive]=\"activeForecastIndex === i\"\n            (toggle)=\"onToggleForecast($event)\"\n          ></app-forecast-item>\n        </div>\n      </div>\n    </section>\n  `\n})\nexport class ForecastComponent implements AfterViewInit {\n  @Input() weatherData: WeatherData | null = null;\n  activeForecastIndex: number | null = null;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    // Component is ready\n  }\n\n  onToggleForecast(index: number): void {\n    if (this.activeForecastIndex === index) {\n      this.activeForecastIndex = null;\n    } else {\n      this.activeForecastIndex = index;\n      // Smooth scroll to the expanded item\n      setTimeout(() => {\n        const activeElement = this.elementRef.nativeElement.querySelector('.forecast-item.active');\n        if (activeElement) {\n          activeElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n        }\n      }, 100);\n    }\n  }\n}"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,qBAAqB,QAAQ,2BAA2B;;;;;;IAWvDC,EAAA,CAAAC,cAAA,2BAMC;IADCD,EAAA,CAAAE,UAAA,oBAAAC,6FAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAAAR,EAAA,CAAAS,WAAA,CAAUF,MAAA,CAAAG,gBAAA,CAAAN,MAAA,CAAwB;IAAA,EAAC;IACpCJ,EAAA,CAAAW,YAAA,EAAoB;;;;;IAFnBX,EAFA,CAAAY,UAAA,UAAAL,MAAA,CAAAM,WAAA,CAAAC,KAAA,CAA2B,UAAAC,IAAA,CAChB,aAAAR,MAAA,CAAAS,mBAAA,KAAAD,IAAA,CAC2B;;;;;IAP5Cf,EADF,CAAAC,cAAA,iBAAsD,YAC1B;IAAAD,EAAA,CAAAiB,MAAA,qBAAc;IAAAjB,EAAA,CAAAW,YAAA,EAAK;IAE3CX,EADF,CAAAC,cAAA,aAAsB,aACoC;IACtDD,EAAA,CAAAkB,UAAA,IAAAC,wDAAA,+BAMC;IAGPnB,EAFI,CAAAW,YAAA,EAAM,EACF,EACE;;;;IAReX,EAAA,CAAAoB,SAAA,GAA2B;IAA3BpB,EAAA,CAAAY,UAAA,YAAAL,MAAA,CAAAM,WAAA,CAAAC,KAAA,CAAAO,IAAA,CAA2B;;;AAWxD,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHrB,KAAAX,WAAW,GAAuB,IAAI;IAC/C,KAAAG,mBAAmB,GAAkB,IAAI;EAEI;EAE7CS,eAAeA,CAAA;IACb;EAAA;EAGFf,gBAAgBA,CAACgB,KAAa;IAC5B,IAAI,IAAI,CAACV,mBAAmB,KAAKU,KAAK,EAAE;MACtC,IAAI,CAACV,mBAAmB,GAAG,IAAI;KAChC,MAAM;MACL,IAAI,CAACA,mBAAmB,GAAGU,KAAK;MAChC;MACAC,UAAU,CAAC,MAAK;QACd,MAAMC,aAAa,GAAG,IAAI,CAACJ,UAAU,CAACK,aAAa,CAACC,aAAa,CAAC,uBAAuB,CAAC;QAC1F,IAAIF,aAAa,EAAE;UACjBA,aAAa,CAACG,cAAc,CAAC;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAS,CAAE,CAAC;;MAE1E,CAAC,EAAE,GAAG,CAAC;;EAEX;;;uBAvBWX,iBAAiB,EAAAtB,EAAA,CAAAkC,iBAAA,CAAAlC,EAAA,CAAAmC,UAAA;IAAA;EAAA;;;YAAjBb,iBAAiB;MAAAc,SAAA;MAAAC,MAAA;QAAAxB,WAAA;MAAA;MAAAyB,UAAA;MAAAC,QAAA,GAAAvC,EAAA,CAAAwC,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAhB1B9C,EAAA,CAAAkB,UAAA,IAAA8B,oCAAA,qBAAsD;;;UAAnBhD,EAAA,CAAAY,UAAA,SAAAmC,GAAA,CAAAlC,WAAA,CAAiB;;;qBAF5Cf,YAAY,EAAAmD,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA,EAAEpD,qBAAqB;MAAAqD,aAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}