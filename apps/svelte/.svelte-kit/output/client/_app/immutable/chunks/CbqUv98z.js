import{w as c}from"./BoBpZ2Lh.js";class d{constructor(){this.baseUrl="https://api.open-meteo.com/v1",this.geocodingUrl="https://geocoding-api.open-meteo.com/v1",this.useMockData=this.shouldUseMockData()}shouldUseMockData(){const e=navigator.userAgent.includes("Playwright")||navigator.userAgent.includes("HeadlessChrome");return window.location.search.includes("mock=false")?!1:window.location.search.includes("mock=true")||e}async getMockData(){try{const e=await fetch("/assets/mocks/weather-data.json");if(!e.ok)throw new Error("Failed to load mock data");return await e.json()}catch(e){throw console.error("Error loading mock data:",e),e}}async geocodeLocation(e){if(this.useMockData)return{latitude:52.52,longitude:13.419998,name:e};try{const t=await fetch(`${this.geocodingUrl}/search?name=${encodeURIComponent(e)}&count=1&language=en&format=json`);if(!t.ok)throw new Error("Geocoding failed");const r=await t.json();if(!r.results||r.results.length===0)throw new Error("Location not found");const o=r.results[0];return{latitude:o.latitude,longitude:o.longitude,name:o.name,country:o.country}}catch(t){throw console.error("Geocoding error:",t),new Error("Unable to find location. Please check the city name and try again.")}}async getWeatherData(e,t){if(this.useMockData)return await this.getMockData();try{const r=new URLSearchParams({latitude:e.toString(),longitude:t.toString(),daily:"temperature_2m_max,temperature_2m_min,weather_code,sunrise,sunset,rain_sum,uv_index_max,precipitation_probability_max",current:"temperature_2m,relative_humidity_2m,apparent_temperature,is_day,snowfall,showers,rain,precipitation,weather_code,cloud_cover,pressure_msl,surface_pressure,wind_direction_10m,wind_gusts_10m,wind_speed_10m",timezone:"GMT"}),o=await fetch(`${this.baseUrl}/forecast?${r}`);if(!o.ok)throw new Error(`Weather API error: ${o.status}`);return await o.json()}catch(r){throw console.error("Weather API error:",r),new Error("Unable to fetch weather data. Please try again later.")}}async getWeatherByCity(e){try{const t=await this.geocodeLocation(e);return{...await this.getWeatherData(t.latitude,t.longitude),locationName:t.name,country:t.country}}catch(t){throw console.error("Weather service error:",t),t}}async getCurrentLocationWeather(){if(!navigator.geolocation)throw new Error("Geolocation not supported");return new Promise((e,t)=>{navigator.geolocation.getCurrentPosition(async r=>{try{const{latitude:o,longitude:l}=r.coords,h=await this.getWeatherData(o,l);e({...h,locationName:"Current Location"})}catch(o){t(o)}},r=>t(r),{timeout:1e4,enableHighAccuracy:!1,maximumAge:3e5})})}}const i=new d,u=c(null),s=c(!1),n=c(null),f={async loadWeather(a){try{s.set(!0),n.set(null),m()&&await new Promise(t=>setTimeout(t,200));const e=await i.getWeatherByCity(a);u.set(e),w(a)}catch(e){n.set(e.message),console.error("Weather store error:",e)}finally{s.set(!1)}},async getCurrentLocationWeather(){try{s.set(!0),n.set(null);const a=await i.getCurrentLocationWeather();u.set(a)}catch(a){throw a}finally{s.set(!1)}},async initialize(){try{if(i.useMockData){await this.loadWeather("London");return}const a=g();if(a){await this.loadWeather(a);return}try{await this.getCurrentLocationWeather()}catch(e){console.warn("Could not get current location:",e),await this.loadWeather("London")}}catch(a){console.error("Failed to initialize weather store:",a),n.set("Failed to load weather data")}},clearError(){n.set(null)}};function w(a){try{localStorage.setItem("weather-app-location",a)}catch(e){console.warn("Could not save location to localStorage:",e)}}function g(){try{return localStorage.getItem("weather-app-location")}catch(a){return console.warn("Could not load saved location:",a),null}}function m(){return navigator.userAgent.includes("Playwright")||navigator.userAgent.includes("HeadlessChrome")}export{u as a,n as e,s as i,f as w};
