name: üß™ Test

on:
  workflow_dispatch:
    inputs:
      frameworks:
        description: 'Frameworks to test (comma-separated, see frameworks.json for available options)'
        required: false
        default: 'all'
        type: string
  pull_request:
    branches: [ main, dev ]
    types: [ opened, synchronize, reopened ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup and Sync Assets
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      frameworks: ${{ steps.matrix.outputs.frameworks }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json
          
      - name: Install root dependencies
        run: |
          npm ci
          npm run install:playwright
          
      - name: Sync shared assets
        run: npm run sync-assets
        
      - name: Install framework dependencies
        run: |
          set -e  # Exit on error
          # Install dependencies for each framework app
          for app in apps/*/; do
            if [ -f "$app/package.json" ]; then
              echo "Installing dependencies for $(basename "$app")"
              cd "$app"
              npm i || { echo "Failed to install dependencies for $(basename "$app")"; exit 1; }
              cd - > /dev/null
            fi
          done
          
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
            
      - name: Determine frameworks to test
        id: matrix
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.frameworks }}" != "all" ]; then
            frameworks="${{ github.event.inputs.frameworks }}"
          else
            # Get framework list from centralized config
            frameworks=$(node scripts/setup/generate-scripts.js github)
          fi
          echo "frameworks=$(echo "[$frameworks]" | sed 's/,/", "/g' | sed 's/\[/[\"/ ; s/\]/\"]/')" >> $GITHUB_OUTPUT
          echo "Testing frameworks: $frameworks"

  test:
    name: Test ${{ matrix.framework }}
    needs: setup
    if: fromJSON(needs.setup.outputs.frameworks)[0] != ''
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        framework: ${{ fromJSON(needs.setup.outputs.frameworks) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Run tests for ${{ matrix.framework }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 4
          retry_wait_seconds: 30
          command: |
            echo "üß™ Running ${{ matrix.framework }} tests (attempt ${{ github.run_attempt }})"
            npm run test:${{ matrix.framework }} -- --reporter=github
            
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.framework }}-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  summary:
    name: Test Summary
    needs: [setup, test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate test summary
        run: |
          echo "## üß™ Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Framework | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| All Frameworks | ${{ needs.test.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Workflow Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          
      - name: Check overall status
        run: |
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "‚ùå Some tests failed. That sucks."
            exit 1
          else
            echo "‚úÖ All tests passed successfully. Party time!"
          fi
