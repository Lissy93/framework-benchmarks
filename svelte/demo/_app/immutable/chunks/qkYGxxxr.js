import{w as l}from"./BoBpZ2Lh.js";class g{constructor(){this.baseUrl="https://api.open-meteo.com/v1",this.geocodingUrl="https://geocoding-api.open-meteo.com/v1",this.useMockData=this.shouldUseMockData()}shouldUseMockData(){const t=navigator.userAgent.includes("Playwright")||navigator.userAgent.includes("HeadlessChrome");return window.location.search.includes("mock=false")?!1:window.location.search.includes("mock=true")||t}async getMockData(){try{this.isTestEnvironment()&&await new Promise(e=>setTimeout(e,200));const t=await fetch("/mocks/weather-data.json");if(!t.ok)throw new Error("Failed to load mock data");return await t.json()}catch(t){throw console.error("Error loading mock data:",t),t}}isTestEnvironment(){return navigator.userAgent.includes("Playwright")||navigator.userAgent.includes("HeadlessChrome")}getMockGeocodingData(t){const e={London:{latitude:51.5074,longitude:-.1278,name:"London",country:"United Kingdom"},Tokyo:{latitude:35.6762,longitude:139.6503,name:"Tokyo",country:"Japan"},Paris:{latitude:48.8566,longitude:2.3522,name:"Paris",country:"France"},"S達o Paulo":{latitude:-23.5505,longitude:-46.6333,name:"S達o Paulo",country:"Brazil"},"New York":{latitude:40.7128,longitude:-74.006,name:"New York",country:"United States"},Z端rich:{latitude:47.3769,longitude:8.5417,name:"Z端rich",country:"Switzerland"}};if(t.includes("Invalid")||t.includes("123")||!t.trim())throw new Error("Unable to find location. Please check the city name and try again.");const r=e[t];return r||(console.warn(`Unknown city: ${t}, falling back to London`),e.London)}async geocodeLocation(t){if(this.useMockData)return this.getMockGeocodingData(t);try{const e=await fetch(`${this.geocodingUrl}/search?name=${encodeURIComponent(t)}&count=1&language=en&format=json`);if(!e.ok)throw new Error("Geocoding failed");const r=await e.json();if(!r.results||r.results.length===0)throw new Error("Location not found");const a=r.results[0];return{latitude:a.latitude,longitude:a.longitude,name:a.name,country:a.country}}catch(e){throw console.error("Geocoding error:",e),new Error("Unable to find location. Please check the city name and try again.")}}async getWeatherData(t,e){if(this.useMockData)return await this.getMockData();try{const r=new URLSearchParams({latitude:t.toString(),longitude:e.toString(),daily:"temperature_2m_max,temperature_2m_min,weather_code,sunrise,sunset,rain_sum,uv_index_max,precipitation_probability_max",current:"temperature_2m,relative_humidity_2m,apparent_temperature,is_day,snowfall,showers,rain,precipitation,weather_code,cloud_cover,pressure_msl,surface_pressure,wind_direction_10m,wind_gusts_10m,wind_speed_10m",timezone:"GMT"}),a=await fetch(`${this.baseUrl}/forecast?${r}`);if(!a.ok)throw new Error(`Weather API error: ${a.status}`);return await a.json()}catch(r){throw console.error("Weather API error:",r),new Error("Unable to fetch weather data. Please try again later.")}}async getWeatherByCity(t){try{const e=await this.geocodeLocation(t);return{...await this.getWeatherData(e.latitude,e.longitude),locationName:e.name,country:e.country}}catch(e){throw console.error("Weather service error:",e),e}}getCurrentLocationWeather(){if(this.useMockData)return this.getWeatherByCity("London");if(!navigator.geolocation)throw new Error("Geolocation not supported");return new Promise((t,e)=>{navigator.geolocation.getCurrentPosition(async r=>{try{const{latitude:a,longitude:u}=r.coords,h=await this.getWeatherData(a,u);t({...h,locationName:"Current Location"})}catch(a){e(a)}},r=>e(r),{timeout:1e4,enableHighAccuracy:!1,maximumAge:3e5})})}}const c=new g,d=l(null),i=l(!0),n=l(null);let s=0;const p={async loadWeather(o){const t=++s;try{i.set(!0),n.set(null),y()&&await new Promise(r=>setTimeout(r,100));const e=await c.getWeatherByCity(o);t===s&&(d.set(e),w(o))}catch(e){t===s&&(n.set(e.message),console.error("Weather store error:",e))}finally{t===s&&i.set(!1)}},async getCurrentLocationWeather(){try{i.set(!0),n.set(null);const o=await c.getCurrentLocationWeather();d.set(o)}catch(o){throw console.error("Current location error:",o),o}finally{i.set(!1)}},async initialize(){try{n.set(null);const o=m();if(o){await this.loadWeather(o);return}if(c.useMockData){await this.loadWeather("London");return}try{n.set(null),await this.getCurrentLocationWeather()}catch(t){console.warn("Could not get current location:",t),n.set(null),await this.loadWeather("London")}}catch(o){console.error("Failed to initialize weather store:",o),n.set("Failed to load weather data"),i.set(!1)}},clearError(){n.set(null)}};function w(o){try{localStorage.setItem("weather-app-location",o)}catch(t){console.warn("Could not save location to localStorage:",t)}}function m(){try{return localStorage.getItem("weather-app-location")}catch(o){return console.warn("Could not load saved location:",o),null}}function y(){return navigator.userAgent.includes("Playwright")||navigator.userAgent.includes("HeadlessChrome")}export{d as a,n as e,i,p as w};
